# Author: David Len (NEL-V)
# YT: https://www.youtube.com/@justneldivad
# version: 0.2

import flpianoroll as flp
from itertools import groupby

label = 'Legato to Selected'

dialog = """
by NEL-V
version: 0.2

This script adjusts the length of selected notes to create a legato effect. Unlike quick legato (Ctrl+L), this script will ONLY adjust the length of all selected notes to the start of the next selected note.


"""

class NoteObj:
    def __init__(self, time, length, number, idx):
        self.start = time
        self.end = time + length
        self.number = number
        self.idx = idx

    def set_end(self, new_end):
        self.end = new_end
        self.length = self.end - self.start


def createDialog():
    """
    Creates the dialog box for the script.
    """
    form = flp.ScriptDialog(
        "Legato to Selected",
        dialog,
    )
    return form


def apply(form):
    """
    Adjusts the length of selected notes to the start of the next selected note.
    """
    # Collect selected notes
    selected_notes = []
    for n in range(flp.score.noteCount):
        note = flp.score.getNote(n)
        if note.selected:
            selected_notes.append({
                'idx': n,
                'start': note.time,
                'length': note.length,
                'pitch': note.number
            })

    if not selected_notes:
        print("No notes selected. Please select notes in the Piano Roll.")
        return
    
    # Group notes by start time to allow legato to chords as well
    grouped_notes = [
        list(group) for _, group in groupby(selected_notes, key=lambda x: x['start'])
    ]

    # Adjust lengths for each group
    for i in range(len(grouped_notes) - 1):
        current_group = grouped_notes[i]
        next_group = grouped_notes[i + 1]

        # Calculate the end time for the current group (start time of the next group)
        group_end_time = next_group[0]['start']

        # Adjust all notes in the current group
        for note in current_group:
            new_length = group_end_time - note['start']
            flp.score.getNote(note['idx']).length = max(1, new_length)  # Ensure positive length

    print("Legato applied successfully.")